{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","size","color","style","marginBottom","faGoogle","marginLeft","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","marginTop","signOut","push","Navigation","display","justifyContent","paddingLeft","cursor","to","marginRight","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5b94eab.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport 'firebase/auth';\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n    \r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        }else if(name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n            if(newAccount){\r\n                // create Account\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            }else{\r\n                // Log in\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch(err){\r\n            setError(err.message);\r\n        }\r\n        \r\n    };\r\n    const toggleAccount = () => setNewAccount(prev => !prev);\r\n    return (\r\n    <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n            <input name='email' type='email' placeholder='Email' required value={email} onChange={onChange} className=\"authInput\"/>\r\n            <input name='password' type='password' placeholder='Password' required value={password} onChange={onChange} className=\"authInput\"/>\r\n            <input type='submit' value={newAccount ? \"Create Account\" : \"Log In\"} className=\"authInput authSubmit\" />\r\n            {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"sign in\" : \"Create Account\" }</span>\r\n    </>\r\n    )\r\n};\r\n\r\nexport default AuthForm;","import userEvent from '@testing-library/user-event';\r\nimport AuthForm from 'components/AuthForm';\r\nimport { authService, firebaseInstance } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport \"css/Auth.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter, faGoogle, faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const { \r\n            target: { name },\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }else if(name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data  = await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    }\r\n\r\n\r\nreturn (\r\n    <div className=\"authContainer\">\r\n        <FontAwesomeIcon icon={faTwitter}\r\n        size=\"3x\"\r\n        color={\"#1da1f2\"}\r\n        style={{marginBottom:30}}/>\r\n        <AuthForm />\r\n        <div className=\"authBtns\">\r\n            <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">Continue with Google\r\n                <FontAwesomeIcon icon={faGoogle} size=\"1x\" color=\"black\" style={{marginLeft:5}}/>\r\n            </button>\r\n            <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">Continue with Github\r\n                <FontAwesomeIcon icon={faGithub} size=\"1x\" color=\"black\" style={{marginLeft:5}}/>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    )\r\n};\r\nexport default Auth;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you wnat to delete this nweet?\");\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing(prev => !prev);\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        console.log(nweetObj, newNweet);\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text:newNweet,\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target : {value}\r\n        } = event;\r\n        setNewNweet(value);\r\n    }\r\n    return (\r\n        <div className=\"nweet\">\r\n            { editing ? (\r\n                <>\r\n                <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                    <input type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} required autoFocus onChange={onChange}  className=\"formInput\" />\r\n                    <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</span>\r\n                </form>\r\n                </>\r\n            ) : (\r\n                <>\r\n                <h4>{nweetObj.text}</h4>\r\n                {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl}/>}\r\n                {isOwner && (\r\n                    <div class=\"nweet__actions\">\r\n                        <span onClick={onDeleteClick}>\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </span>\r\n                        <span onClick={toggleEditing}>\r\n                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                        </span>\r\n                    </div>\r\n                )}\r\n                </>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport Nweet from \"./Nweet\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\"); // readdataurl\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        }\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\")\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value }\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files }\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result }\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos <FontAwesomeIcon icon={faPlus} color={\"#1da1f2\"} style={{marginLeft:5}} /></span>\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                 <div className=\"factoryForm__attachment\">\r\n                 <img\r\n                   src={attachment}\r\n                   style={{\r\n                     backgroundImage: attachment,\r\n                   }}\r\n                 />\r\n                 <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                   <span>Remove</span>\r\n                   <FontAwesomeIcon icon={faTimes} color={\"#1da1f2\"} />\r\n                 </div>\r\n               </div>\r\n            )}\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NweetFactory;","import Nweet from 'components/Nweet';\r\nimport NweetFactory from 'components/NweetFactory';\r\nimport { dbService, storageService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst Home = ({userObj}) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\r\n            const nweetArray = snapshot.docs.map(doc => ({\r\n                id:doc.id, \r\n                ...doc.data(),\r\n            }))\r\n            setNweets(nweetArray);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n    <div className=\"container\">\r\n       <NweetFactory userObj={userObj} />\r\n        <div>\r\n            {nweets.map(nweet => (\r\n                <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid}/>\r\n            )\r\n            )}\r\n        </div>\r\n    </div>\r\n    )\r\n    \r\n} \r\nexport default Home; ","import { authService, dbService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport \"css/Profile.css\";\r\n\r\n\r\nexport default ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n        refreshUser();\r\n    };\r\n    const getMyNweets = async () => {\r\n        const nweets = await dbService\r\n            .collection(\"nweets\")\r\n            .where(\"creatorId\", \"==\", userObj.uid)\r\n            .orderBy(\"createdAt\", 'desc')\r\n            .get();\r\n        console.log(nweets.docs.map((doc) => doc.data()));\r\n    }\r\n    useEffect(() => {\r\n        getMyNweets();\r\n    }, []);\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value }\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Display name\"\r\n                    autoFocus\r\n                    value={newDisplayName}\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => <nav>\r\n    <ul style={{display:\"flex\", justifyContent:\"center\", marginTop:50, paddingLeft:0, cursor:\"pointer\"}}>\r\n        <li>\r\n            <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                <FontAwesomeIcon icon={faTwitter} size=\"2x\" color={\"#1da1f2\"} />\r\n            </Link>\r\n        </li>\r\n        <li>\r\n            <Link to=\"/profile\"\r\n                style={\r\n                    {\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }\r\n                }\r\n            >\r\n                <FontAwesomeIcon icon={faUser} size=\"2x\" color={\"#1da1f2\"} style={{marginBottom:10}}/>\r\n                {userObj.displayName} Profile\r\n            </Link>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n\r\nexport default Navigation;","import { React } from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Profile from 'routes/Profile';\r\nimport Navigation from 'components/Navigation';\r\nimport \"css/Home.css\";\r\n\r\nconst AppRouter = ({isLoggedIn, userObj, refreshUser}) => {\r\n    return (\r\n    <Router>\r\n        {isLoggedIn && <Navigation userObj={userObj}/>}\r\n        <Switch>\r\n            {isLoggedIn ? (\r\n            <div style={{\r\n                maxWidth: 890,\r\n                width: \"100%\",\r\n                margin: \"0 auto\",\r\n                marginTop: 80,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}>\r\n            <Route exact path=\"/\">\r\n                <Home userObj={userObj}/>\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n            </Route>\r\n            </div>\r\n            ) : (\r\n            <>\r\n            <Route exact path=\"/\">\r\n                <Auth/> \r\n            </Route>\r\n            </>\r\n            )}\r\n        </Switch>\r\n    </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() =>{\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        setUserObj({\n          displayName : user.displayName,\n          uid:user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      }else{\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, [])\n  const refreshUser = () =>{\n    const user = authService.currentUser;\n    setUserObj({\n      displayName : user.displayName,\n      uid:user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n  return (\n    <>\n      { init ? <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser}/> : \"initializing...\"}\n      {/* <footer>&copy; {new Date().getFullYear()} Nwitter</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport fbase from \"fbase\";\nimport \"css/common.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}