[{"C:\\Users\\hyunny\\nwitter\\src\\index.js":"1","C:\\Users\\hyunny\\nwitter\\src\\components\\App.js":"2","C:\\Users\\hyunny\\nwitter\\src\\components\\Router.js":"3","C:\\Users\\hyunny\\nwitter\\src\\routes\\Home.js":"4","C:\\Users\\hyunny\\nwitter\\src\\routes\\Auth.js":"5","C:\\Users\\hyunny\\nwitter\\src\\fbase.js":"6","C:\\Users\\hyunny\\nwitter\\src\\components\\Navigation.js":"7","C:\\Users\\hyunny\\nwitter\\src\\routes\\Profile.js":"8","C:\\Users\\hyunny\\nwitter\\src\\components\\Nweet.js":"9","C:\\Users\\hyunny\\nwitter\\src\\components\\NweetFactory.js":"10","C:\\Users\\hyunny\\nwitter\\src\\components\\AuthForm.js":"11"},{"size":258,"mtime":1612114920850,"results":"12","hashOfConfig":"13"},{"size":1033,"mtime":1611843970792,"results":"14","hashOfConfig":"13"},{"size":1215,"mtime":1612184302923,"results":"15","hashOfConfig":"13"},{"size":910,"mtime":1612180319510,"results":"16","hashOfConfig":"13"},{"size":1601,"mtime":1611941355705,"results":"17","hashOfConfig":"13"},{"size":697,"mtime":1611587716204,"results":"18","hashOfConfig":"13"},{"size":1207,"mtime":1612116293869,"results":"19","hashOfConfig":"13"},{"size":2076,"mtime":1612181498184,"results":"20","hashOfConfig":"13"},{"size":2412,"mtime":1612118913755,"results":"21","hashOfConfig":"13"},{"size":3418,"mtime":1612117594109,"results":"22","hashOfConfig":"13"},{"size":1860,"mtime":1611941702989,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"1vir1k8",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"27"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\Users\\hyunny\\nwitter\\src\\index.js",["53"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport fbase from \"fbase\";\nimport \"css/common.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n",["54","55"],"C:\\Users\\hyunny\\nwitter\\src\\components\\App.js",[],"C:\\Users\\hyunny\\nwitter\\src\\components\\Router.js",[],"C:\\Users\\hyunny\\nwitter\\src\\routes\\Home.js",["56"],"import Nweet from 'components/Nweet';\r\nimport NweetFactory from 'components/NweetFactory';\r\nimport { dbService, storageService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst Home = ({userObj}) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\r\n            const nweetArray = snapshot.docs.map(doc => ({\r\n                id:doc.id, \r\n                ...doc.data(),\r\n            }))\r\n            setNweets(nweetArray);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n    <div className=\"container\">\r\n       <NweetFactory userObj={userObj} />\r\n        <div>\r\n            {nweets.map(nweet => (\r\n                <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid}/>\r\n            )\r\n            )}\r\n        </div>\r\n    </div>\r\n    )\r\n    \r\n} \r\nexport default Home; ","C:\\Users\\hyunny\\nwitter\\src\\routes\\Auth.js",["57","58"],"import userEvent from '@testing-library/user-event';\r\nimport AuthForm from 'components/AuthForm';\r\nimport { authService, firebaseInstance } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport \"css/Auth.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter, faGoogle, faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const { \r\n            target: { name },\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }else if(name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data  = await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    }\r\n\r\n\r\nreturn (\r\n    <div className=\"authContainer\">\r\n        <FontAwesomeIcon icon={faTwitter}\r\n        size=\"3x\"\r\n        color={\"#1da1f2\"}\r\n        style={{marginBottom:30}}/>\r\n        <AuthForm />\r\n        <div className=\"authBtns\">\r\n            <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">Continue with Google\r\n                <FontAwesomeIcon icon={faGoogle} size=\"1x\" color=\"black\" style={{marginLeft:5}}/>\r\n            </button>\r\n            <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">Continue with Github\r\n                <FontAwesomeIcon icon={faGithub} size=\"1x\" color=\"black\" style={{marginLeft:5}}/>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    )\r\n};\r\nexport default Auth;","C:\\Users\\hyunny\\nwitter\\src\\fbase.js",[],"C:\\Users\\hyunny\\nwitter\\src\\components\\Navigation.js",[],"C:\\Users\\hyunny\\nwitter\\src\\routes\\Profile.js",["59","60"],"import { authService, dbService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport \"css/Profile.css\";\r\n\r\n\r\nexport default ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n        refreshUser();\r\n    };\r\n    const getMyNweets = async () => {\r\n        const nweets = await dbService\r\n            .collection(\"nweets\")\r\n            .where(\"creatorId\", \"==\", userObj.uid)\r\n            .orderBy(\"createdAt\")\r\n            .get();\r\n        console.log(nweets.docs.map((doc) => doc.data()));\r\n    }\r\n    useEffect(() => {\r\n        getMyNweets();\r\n    }, []);\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value }\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Display name\"\r\n                    autoFocus\r\n                    value={newDisplayName}\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n}","C:\\Users\\hyunny\\nwitter\\src\\components\\Nweet.js",["61"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you wnat to delete this nweet?\");\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing(prev => !prev);\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        console.log(nweetObj, newNweet);\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text:newNweet,\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target : {value}\r\n        } = event;\r\n        setNewNweet(value);\r\n    }\r\n    return (\r\n        <div className=\"nweet\">\r\n            { editing ? (\r\n                <>\r\n                <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                    <input type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} required autoFocus onChange={onChange}  className=\"formInput\" />\r\n                    <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</span>\r\n                </form>\r\n                </>\r\n            ) : (\r\n                <>\r\n                <h4>{nweetObj.text}</h4>\r\n                {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl}/>}\r\n                {isOwner && (\r\n                    <div class=\"nweet__actions\">\r\n                        <span onClick={onDeleteClick}>\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </span>\r\n                        <span onClick={toggleEditing}>\r\n                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                        </span>\r\n                    </div>\r\n                )}\r\n                </>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Nweet;","C:\\Users\\hyunny\\nwitter\\src\\components\\NweetFactory.js",["62","63"],"import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport Nweet from \"./Nweet\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\"); // readdataurl\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        }\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\")\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value }\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files }\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result }\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos <FontAwesomeIcon icon={faPlus} color={\"#1da1f2\"} style={{marginLeft:5}} /></span>\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                 <div className=\"factoryForm__attachment\">\r\n                 <img\r\n                   src={attachment}\r\n                   style={{\r\n                     backgroundImage: attachment,\r\n                   }}\r\n                 />\r\n                 <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                   <span>Remove</span>\r\n                   <FontAwesomeIcon icon={faTimes} color={\"#1da1f2\"} />\r\n                 </div>\r\n               </div>\r\n            )}\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NweetFactory;","C:\\Users\\hyunny\\nwitter\\src\\components\\AuthForm.js",[],{"ruleId":"64","severity":1,"message":"65","line":4,"column":8,"nodeType":"66","messageId":"67","endLine":4,"endColumn":13},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"64","severity":1,"message":"72","line":3,"column":21,"nodeType":"66","messageId":"67","endLine":3,"endColumn":35},{"ruleId":"64","severity":1,"message":"73","line":1,"column":8,"nodeType":"66","messageId":"67","endLine":1,"endColumn":17},{"ruleId":"64","severity":1,"message":"74","line":4,"column":17,"nodeType":"66","messageId":"67","endLine":4,"endColumn":25},{"ruleId":"75","severity":1,"message":"76","line":7,"column":1,"nodeType":"77","endLine":66,"endColumn":2},{"ruleId":"78","severity":1,"message":"79","line":25,"column":8,"nodeType":"80","endLine":25,"endColumn":10,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":44,"column":44,"nodeType":"84","endLine":44,"endColumn":79},{"ruleId":"64","severity":1,"message":"85","line":3,"column":8,"nodeType":"66","messageId":"67","endLine":3,"endColumn":13},{"ruleId":"82","severity":1,"message":"83","line":86,"column":18,"nodeType":"84","endLine":91,"endColumn":20},"no-unused-vars","'fbase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["86"],"no-negated-in-lhs",["87"],"'storageService' is defined but never used.","'userEvent' is defined but never used.","'useState' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyNweets'. Either include it or remove the dependency array.","ArrayExpression",["88"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Nweet' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [getMyNweets]",{"range":"91","text":"92"},[814,816],"[getMyNweets]"]